#pragma checksum "D:\SVN\SSP_TDC\Source\CSKH_SSP\CSKH_SSP\Views\ModalContent\QuickModalContent\_ReplyQuickModal.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "009d5914cd567bf8af28e38c87f5646af1d230fc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ModalContent_QuickModalContent__ReplyQuickModal), @"mvc.1.0.view", @"/Views/ModalContent/QuickModalContent/_ReplyQuickModal.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"009d5914cd567bf8af28e38c87f5646af1d230fc", @"/Views/ModalContent/QuickModalContent/_ReplyQuickModal.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"57218c316b6921e2cd61027a2387edc31a2d9471", @"/Views/_ViewImports.cshtml")]
    public class Views_ModalContent_QuickModalContent__ReplyQuickModal : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\SVN\SSP_TDC\Source\CSKH_SSP\CSKH_SSP\Views\ModalContent\QuickModalContent\_ReplyQuickModal.cshtml"
 if (@Model.GroupUserPermission.IsReplyRequest > 0 && Model.RenderButton.ReplyRequestBtn)
{


#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <div class=""modal fade bd-example-modal-lg"" id=""ReplyQuickModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"" style=""display: none;"">
        <div class=""modal-dialog modal-lg"" style=""max-width: 90% !important;"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleLargeModalLabel"">Nhập nội dung trả lời</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">×</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""card-body"">
                        <div class=""alert alert-primary"" role=""alert"">
                            Tag tên bất kỳ ai bằng cách gõ <a href=""#"" class=""alert-link"">");
            WriteLiteral("@</a>\r\n                        </div>\r\n                        <form ");
            WriteLiteral(" id=\"ReplyRequestForm\">\r\n\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" name=\"RequestID\" id=\"RequestID_Reply\"");
            BeginWriteAttribute("value", " value=\"", 1323, "\"", 1368, 1);
#nullable restore
#line 21 "D:\SVN\SSP_TDC\Source\CSKH_SSP\CSKH_SSP\Views\ModalContent\QuickModalContent\_ReplyQuickModal.cshtml"
WriteAttributeValue("", 1331, Model.ContentRequestHeader.RequestID, 1331, 37, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("placeholder", " placeholder=\"", 1369, "\"", 1383, 0);
            EndWriteAttribute();
            WriteLiteral(@" readonly hidden>
                                <textarea cols=""60"" id=""ReplyContent"" name=""ReplyContent"" rows=""10""></textarea>
                            </div>

                            <div class=""form-group files"" id=""files1"">
                                <span class=""btn btn-default btn-file"">
                                    Chọn file đính kèm <input type=""file"" name=""files"" multiple />
                                </span>
                                <br />
                                <ul class=""fileList""></ul>
                            </div>
                            <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Đóng</button>
                            <button class=""btn btn-primary"" type=""submit"" id=""ReplyRequestFormBtn"">Gửi</button>
                        </form>
                    </div>
                </div>


            </div>
        </div>
    </div>
");
            WriteLiteral(@"    <script>
        //ReplyRequestForm
        var url = window.location.origin;
        var ListMention = [];
        $.getJSON(url + '/api/Helpers/GetUserMention', function (data) {
            ListMention = data;
            //console.log(ListMention);
        })
        CKEDITOR.replace('ReplyContent', {
            extraPlugins: 'mentions',
        });
        CKEDITOR.config.mentions = [{
            feed: dataFeed,
            itemTemplate: '<li class=""media"" data-id=""{id}"">' +
                '<img class=""align-self-center mr-3"" style=""height: 20px"" src=""/assets/svg/profile.svg"" />' +
                '<div class=""media-body""><h7 class=""mt-0"">{username} / {fullname}</h7></strong>' +
                '<p class=""text-muted mb-0"">{department}</p>' +
                '</li>',
            outputTemplate: '<a style=""color: #0080ff;font-weight: 600;"" href=""#"" id=""{id}"" onclick=""ShowInfoTagName({id})"">");
            WriteLiteral(@"@{username}&nbsp;[{fullname}]&nbsp;</a><span>&nbsp;</span>',
            minChars: 0
        }];

        function dataFeed(opts, callback) {
            var matchProperty = 'username',
                data = ListMention.filter(function (item) {
                    return item[matchProperty].indexOf(opts.query.toLowerCase()) == 0;
                });

            data = data.sort(function (a, b) {
                return a[matchProperty].localeCompare(b[matchProperty], undefined, {
                    sensitivity: 'accent'
                });
            });

            callback(data);
        }

        $(""#ReplyRequestFormBtn"").click(function (event) {
            event.preventDefault();
            var form = $('#ReplyRequestForm')[0];
            for (instance in CKEDITOR.instances)
                CKEDITOR.instances[instance].updateElement();
            var data = new FormData(form);
            $(""#ReplyRequestFormBtn"").prop(""disabled"", true);
            data.append('RequestI");
            WriteLiteral("D\', \'");
#nullable restore
#line 88 "D:\SVN\SSP_TDC\Source\CSKH_SSP\CSKH_SSP\Views\ModalContent\QuickModalContent\_ReplyQuickModal.cshtml"
                                 Write(ViewBag.RequestID);

#line default
#line hidden
#nullable disable
            WriteLiteral("\');\r\n            $.ajax({\r\n                type: \"POST\",\r\n                enctype: \'multipart/form-data\',\r\n                url: \"");
#nullable restore
#line 92 "D:\SVN\SSP_TDC\Source\CSKH_SSP\CSKH_SSP\Views\ModalContent\QuickModalContent\_ReplyQuickModal.cshtml"
                 Write(Url.Action("ReplyRequest", "RequestAction"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                data: data,
                processData: false,
                contentType: false,
                cache: false,
                timeout: 600000,
                success: function (data) {
                    if (data == ""OK"") {
                        toastr.success('Thông báo !!!', 'Trả lời thành công');;
                        //AlertForm(""Thành công"", ""success"", false, ""OK"");
                        $('.close').click();
                        loadRequestContent('");
#nullable restore
#line 103 "D:\SVN\SSP_TDC\Source\CSKH_SSP\CSKH_SSP\Views\ModalContent\QuickModalContent\_ReplyQuickModal.cshtml"
                                       Write(ViewBag.RequestID);

#line default
#line hidden
#nullable disable
            WriteLiteral("\', \"\")\r\n                    }\r\n                },\r\n                error: function (e) {\r\n                }\r\n            });\r\n\r\n        })\r\n\r\n    </script>\r\n");
#nullable restore
#line 113 "D:\SVN\SSP_TDC\Source\CSKH_SSP\CSKH_SSP\Views\ModalContent\QuickModalContent\_ReplyQuickModal.cshtml"
}
else
{

}

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
